pipeline {
    agent any

    environment {
        PYTHON_EXE = "D:\\Jenkins_Python\\.venv\\Scripts\\python.exe"
        SCRIPT_NAME = "Jenkins\\run_canoe_com.py"
        REPORT_GENERATION_PATH = "D:\\can\\vTESTstudio\\TestReports" // 에이전트에서 리포트가 생성되는 경로
        REPORT_FILE_PATTERN = "*.vtestreport"
        ARTIFACT_STAGING_DIR = "reports" // 에이전트 워크스페이스 내의 폴더
    }
    stages {
        // ... (Checkout Source, Run CANoe Automation 기존 스테이지) ...
    }
    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
        script {
            echo "Attempting to archive vTESTreport files for download via Jenkins UI..."
            def sourcePath = env.REPORT_GENERATION_PATH
            def destinationStagingPath = "${WORKSPACE}\\%ARTIFACT_STAGING_DIR%"

            try {
                bat "mkdir %ARTIFACT_STAGING_DIR%"
                bat "xcopy /s /y \"${sourcePath}\\%REPORT_FILE_PATTERN%\" \"${destinationStagingPath}\\\""
                echo "Copied report files to agent staging directory."
                
                archiveArtifacts artifacts: "${ARTIFACT_STAGING_DIR}/**/*.vtestreport", fingerprint: true
                echo "Successfully archived vTESTreport files to Jenkins Master for UI download."

            } catch (Exception e) {
                echo "Failed to archive vTESTreport files: ${e.getMessage()}"
            }
        }
    }
}